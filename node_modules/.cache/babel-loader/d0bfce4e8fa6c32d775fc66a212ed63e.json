{"ast":null,"code":"import _classCallCheck from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brentnewman/DC/final_project/class_emotion/src/components/VeryLost.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nvar VERY_LOST = 'http://localhost:5000/VeryLost';\nexport var VeryLost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VeryLost, _Component);\n\n  function VeryLost(props) {\n    var _this;\n\n    _classCallCheck(this, VeryLost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VeryLost).call(this, props)); // create the local state of the component\n\n    _this.handleIncrementButtonClicked = function () {\n      _this.setState({\n        counter: _this.state.counter + 1\n      }); // dispatch an action to set the global state\n      // this.props.onIncrementDispatch()\n\n\n      var user = _this.state.user;\n      axios.post(VERY_LOST, {\n        very_lost: user.very_lost\n      }); //.then((response))\n    };\n\n    _this.state = {\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(VeryLost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Local State Counter: \", this.state.counter), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Global State Counter: \", this.props.ctr), React.createElement(\"button\", {\n        onClick: this.handleIncrementButtonClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"INCREMENT LOCAL STATE\"), React.createElement(\"button\", {\n        onClick: this.props.onIncrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"INCREMENT GLOBAL STATE\"));\n    } // render() {\n    //   return (\n    //     <div>\n    //       <h1>Very Lost Counted</h1>\n    //       <button className='LostButton' onClick={this.handleIncrementButtonClicked(}> )Very Lost</button>\n    //       <h1 className='LostNumber' >{this.props.VeryLost}</h1>\n    //     </div>\n    //   )\n    // }\n\n  }]);\n\n  return VeryLost;\n}(Component); // render() {\n//   return (\n//   <div>\n//     <button className='LostButton' onClick={this.incrementCounter}> Very Lost</button>\n//     <h1 className='LostNumber' >{this.props.VeryLost}</h1>\n//   </div>\n//   )\n// }\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    VeryLost: state.VeryLost\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrementDispatch: function onIncrementDispatch() {\n      return dispatch({\n        type: \"VERYLOST_COUNTER\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VeryLost);","map":{"version":3,"sources":["/Users/brentnewman/DC/final_project/class_emotion/src/components/VeryLost.js"],"names":["React","Component","connect","axios","VERY_LOST","VeryLost","props","handleIncrementButtonClicked","setState","counter","state","user","post","very_lost","ctr","onIncrementCounter","mapStateToProps","mapDispatchToProps","dispatch","onIncrementDispatch","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,SAAS,GAAG,gCAAlB;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AAEE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN,GADiB,CAGjB;;AAHiB,UAWnBC,4BAXmB,GAWY,YAAM;AAEnC,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWD,OAAX,GAAqB;AADlB,OAAd,EAFmC,CAMnC;AACA;;;AAEA,UAAIE,IAAI,GAAG,MAAKD,KAAL,CAAWC,IAAtB;AAEAR,MAAAA,KAAK,CAACS,IAAN,CAAWR,SAAX,EAAqB;AACnBS,QAAAA,SAAS,EAAEF,IAAI,CAACE;AADG,OAArB,EAXmC,CAcnC;AAED,KA3BkB;;AAIjB,UAAKH,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAG;AADC,KAAb;AAJiB;AAQlB;;AAVH;AAAA;AAAA,6BA+BW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA0B,KAAKC,KAAL,CAAWD,OAArC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA2B,KAAKH,KAAL,CAAWQ,GAAtC,CAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKP,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWS,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANF,CADF;AAUD,KA1CH,CA4CE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApDF;;AAAA;AAAA,EAA8Bd,SAA9B,E,CAsDE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAIF,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACN,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACL;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,mBAAmB,EAAE;AAAA,aAAMD,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA;AADhB,GAAP;AAID,CALD;;AAOA,eAAelB,OAAO,CAACc,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CZ,QAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nconst VERY_LOST = 'http://localhost:5000/VeryLost'\n\nexport class VeryLost extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // create the local state of the component\n    this.state = {\n      counter : 0\n    }\n\n  }\n\n\n  handleIncrementButtonClicked = () => {\n\n    this.setState({\n      counter: this.state.counter + 1\n    })\n\n    // dispatch an action to set the global state\n    // this.props.onIncrementDispatch()\n\n    let user = this.state.user\n    \n    axios.post(VERY_LOST,{\n      very_lost: user.very_lost,\n    })\n    //.then((response))\n\n  }\n\n  render() {\n    return (\n      <div>\n\n        <h1>Local State Counter: {this.state.counter}</h1>\n        <h1>Global State Counter: {this.props.ctr}</h1>\n        <button onClick={this.handleIncrementButtonClicked}>INCREMENT LOCAL STATE</button>\n\n        <button onClick={this.props.onIncrementCounter}>INCREMENT GLOBAL STATE</button>\n      </div>\n    )\n  }\n\n  // render() {\n  //   return (\n  //     <div>\n  //       <h1>Very Lost Counted</h1>\n  //       <button className='LostButton' onClick={this.handleIncrementButtonClicked(}> )Very Lost</button>\n  //       <h1 className='LostNumber' >{this.props.VeryLost}</h1>\n  //     </div>\n  //   )\n  // }\n}\n  // render() {\n  //   return (\n  //   <div>\n  //     <button className='LostButton' onClick={this.incrementCounter}> Very Lost</button>\n  //     <h1 className='LostNumber' >{this.props.VeryLost}</h1>\n  //   </div>\n\n  //   )\n  // }\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    VeryLost: state.VeryLost\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrementDispatch: () => dispatch({type: \"VERYLOST_COUNTER\"})\n    \n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(VeryLost);\n"]},"metadata":{},"sourceType":"module"}