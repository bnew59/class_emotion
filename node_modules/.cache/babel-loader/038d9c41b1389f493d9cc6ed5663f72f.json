{"ast":null,"code":"import _classCallCheck from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brentnewman/DC/final_project/class_emotion/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brentnewman/DC/final_project/class_emotion/src/components/StepperView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar StepperView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StepperView, _Component);\n\n  function StepperView(props) {\n    var _this;\n\n    _classCallCheck(this, StepperView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StepperView).call(this, props)); // create the local state of the component\n\n    _this.incrementCounter = function () {\n      // dispatch an action to set the global state\n      _this.props.onIncrementDispatch();\n      /*\n      // update the state\n      this.setState({ // setState is asyncronous function\n        counter: this.state.counter + 1\n      },() => { // fired when the state is set\n        // call handleOnIncrement which is passed from the parent (App.js)\n        this.props.handleOnIncrement(this.state.counter)\n      }) */\n\n    };\n\n    _this.decrementCounter = function () {\n      _this.props.onDecrementDispatch();\n      /*\n      this.setState({\n        counter: this.state.counter - 1\n      },() => {\n          this.props.handleOnDecrement(this.state.counter)\n      }) */\n\n    };\n\n    _this.state = {\n      counter: 5\n    };\n    return _this;\n  } // New way of doing things ES6\n\n\n  _createClass(StepperView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.name, React.createElement(\"button\", {\n        onClick: this.decrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.passengerCount), React.createElement(\"button\", {\n        onClick: this.incrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return StepperView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    passengerCount: state.noOfPassengers\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrementDispatch: function onIncrementDispatch() {\n      return dispatch({\n        type: \"INC_PASSENGER\"\n      });\n    },\n    onDecrementDispatch: function onDecrementDispatch() {\n      return dispatch({\n        type: \"DEC_PASSENGER\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepperView);","map":{"version":3,"sources":["/Users/brentnewman/DC/final_project/class_emotion/src/components/StepperView.js"],"names":["React","Component","connect","StepperView","props","incrementCounter","onIncrementDispatch","decrementCounter","onDecrementDispatch","state","counter","name","passengerCount","mapStateToProps","noOfPassengers","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,W;;;;;AAEJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN,GADiB,CAGjB;;AAHiB,UAUnBC,gBAVmB,GAUA,YAAM;AAEvB;AACA,YAAKD,KAAL,CAAWE,mBAAX;AAEA;;;;;;;;;AASD,KAxBkB;;AAAA,UA0BnBC,gBA1BmB,GA0BA,YAAM;AAEvB,YAAKH,KAAL,CAAWI,mBAAX;AACA;;;;;;;AAOD,KApCkB;;AAIjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAJiB;AAOlB,G,CAED;;;;;6BA6BS;AACP,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKN,KAAL,CAAWO,IADZ,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKH,KAAL,CAAWQ,cAAnB,CAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKP,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADA;AASD;;;;EAlDuBJ,S;;AAsD1B,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAW;AACjC,SAAO;AACLG,IAAAA,cAAc,EAAEH,KAAK,CAACK;AADjB,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLV,IAAAA,mBAAmB,EAAE;AAAA,aAAMU,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA,KADhB;AAELT,IAAAA,mBAAmB,EAAE;AAAA,aAAMQ,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAd;AAAA;AAFhB,GAAP;AAID,CALD;;AAOA,eAAef,OAAO,CAACW,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CZ,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nclass StepperView extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // create the local state of the component\n    this.state = {\n      counter: 5\n    }\n  }\n\n  // New way of doing things ES6\n  incrementCounter = () => {\n\n    // dispatch an action to set the global state\n    this.props.onIncrementDispatch()\n\n    /*\n    // update the state\n    this.setState({ // setState is asyncronous function\n      counter: this.state.counter + 1\n    },() => { // fired when the state is set\n      // call handleOnIncrement which is passed from the parent (App.js)\n      this.props.handleOnIncrement(this.state.counter)\n    }) */\n\n  }\n\n  decrementCounter = () => {\n\n    this.props.onDecrementDispatch() \n    /*\n    this.setState({\n      counter: this.state.counter - 1\n    },() => {\n        this.props.handleOnDecrement(this.state.counter)\n    }) */\n\n  }\n\n  render() {\n    return (\n    <div>\n    {this.props.name}\n      <button onClick={this.decrementCounter}>-</button>\n      <label>{this.props.passengerCount}</label>\n      <button onClick={this.incrementCounter}>+</button>\n    </div>\n\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    passengerCount: state.noOfPassengers\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrementDispatch: () => dispatch({type: \"INC_PASSENGER\"}),\n    onDecrementDispatch: () => dispatch({type: \"DEC_PASSENGER\"})\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(StepperView);\n"]},"metadata":{},"sourceType":"module"}